<?xml version="1.0"?>
<page path="index" short-title="Home">
      <div class="jumbotron">
        <h1 class="display-3">Server Evolution Made Easy.</h1>
        <p>Server Mechanic is a tool to apply migration scripts to your machine step by step in a reliable way.</p>
        <p>
          Evolve<br/>
          &#183; Bare Metal Servers<br/>
          &#183; Virtual Machines<br/>
          &#183; Docker Containers<br/>
          &#183; Workspaces
        </p>
        <p><a class="btn btn-lg btn-success" href="#getting-started" role="button">Get started now</a></p>
      </div>

      <div class="row">
        <div class="col-lg-12">
          <h1><a id="getting-started"></a>Getting started</h1>
          <p>If you want to manage your machines (bare metal, virtual machines, containers or simply workspaces) in a reproducable way, one strategy is the creation of "infrastructure as code". Server Mechanic executes this code and so your infrastructure is created or changed.</p>
        </div>
      </div>
      <div class="row">
        <div class="col-lg-12">
<h2>How it works</h2>
          <h4>Server Mechanic for servers and virtual machines</h4>
          <p>With Server Mechanic you author changes to your machines as scripts in your favorite language, e.g. shell scripts. Server Mechanic collects these migration scripts, executes them and records them as applied in an internal database. Next time only new migrations will be executed. In case of an error you fix the problem and start over.
</p>
      </div>
  </div>
      <div class="row">
        <div class="col-lg-12">
          <h4>Server Mechanic for Docker containers</h4>
          <p>Docker already utilizes the step by step approach with the commands in your Dockerfile. These commands are run at container image build time. So you have full access to the container's internal state. But external volumes cannot be manipulated by Dockerfile commands. Here Server Mechanic comes into play.</p>
          <p>Server Mechanic is started on container startup, applies your migration which migrates the state in your volumes, then container startup proceeds. So you can roll out adjustments to external volumes with new container versions and containers and volumes stay in sync.</p>
      </div>
  </div>

      <div class="row">
        <div class="col-lg-12">
<h2>Supported Platforms</h2>
  <p>Please check if your platform is supported.</p>
  <table class="table table-bordered table-striped" id="platform-support">
    <tr><td>OS</td><td>Dist.</td><td>Version</td><td>Arch.</td><td>Supported</td><td>Notes</td></tr>
    <tr><td>Linux</td><td>Ubuntu</td><td>xenial (16.04)</td><td>i386</td><td class="supported">Yes</td><td></td></tr>
    <tr><td>Linux</td><td>Ubuntu</td><td>xenial (16.04)</td><td>amd64</td><td class="supported">Yes</td><td></td></tr>
    <tr><td>Linux</td><td>Ubuntu</td><td>yakkety (16.10)</td><td>i386</td><td class="supported">Yes</td><td></td></tr>
    <tr><td>Linux</td><td>Ubuntu</td><td>yakkety (16.10)</td><td>amd64</td><td class="supported">Yes</td><td></td></tr>
    <tr><td>Linux</td><td>Debian</td><td>wheezy (7)</td><td>i386</td><td class="supported">Yes</td><td></td></tr>
    <tr><td>Linux</td><td>Debian</td><td>wheezy (7)</td><td>amd64</td><td class="supported">Yes</td><td></td></tr>
    <tr><td>Linux</td><td>Debian</td><td>jessie (8)</td><td>i386</td><td class="supported">Yes</td><td><a href="https://github.com/server-mechanic/mechanic/issues/5" target="_blank">Package install broken!</a></td></tr>
    <tr><td>Linux</td><td>Debian</td><td>jessie (8)</td><td>amd64</td><td class="supported">Yes</td><td><a href="https://github.com/server-mechanic/mechanic/issues/5" target="_blank">Package install broken!</a></td></tr>
    <tr><td>Linux</td><td>Debian</td><td>sid (9)</td><td>i386</td><td class="supported">Yes</td><td></td></tr>
    <tr><td>Linux</td><td>Debian</td><td>sid (9)</td><td>amd64</td><td class="supported">Yes</td><td></td></tr>
    <tr><td>Linux</td><td>Fedora</td><td>25</td><td>i386</td><td class="unsupported">Not yet</td><td></td></tr>
    <tr><td>Linux</td><td>Fedora</td><td>25</td><td>amd64</td><td class="unsupported">Not yet</td><td>In Preparation</td></tr>
    <tr><td>Linux</td><td>Centos</td><td>7</td><td>i386</td><td class="unsupported">Not yet</td><td></td></tr>
    <tr><td>Linux</td><td>Centos</td><td>7</td><td>amd64</td><td class="unsupported">Not yet</td><td></td></tr>
    <tr><td>Linux</td><td>SuSE</td><td></td><td></td><td class="unsupported">Not yet</td><td></td></tr>
    <tr><td>Linux</td><td>Arch</td><td></td><td></td><td class="unsupported">Not yet</td><td></td></tr>
    <tr><td>BSD</td><td></td><td></td><td></td><td class="unsupported">Not yet</td><td></td></tr>
    <tr><td>OSX</td><td></td><td></td><td></td><td class="unsupported">Not yet</td><td></td></tr>
    <tr><td>Solaris</td><td></td><td></td><td></td><td class="unsupported">Not yet</td><td></td></tr>
    <tr><td>Windows</td><td></td><td></td><td></td><td class="unsupported">Not sure</td><td></td></tr>
  </table>
    </div>
      <div class="row">
        <div class="col-lg-12">
          <h2>Installation</h2>

          <p>The easiest way to install Server Mechanic is the installer script. No magic, the installer script</p>
          <ul>
            <li>adds a package repository to your system</li>
            <li>and installs the mechanic package.</li>
          </ul>

          <p>Execute the install script via the following command:</p>
          <code>
curl -s https://raw.githubusercontent.com/server-mechanic/packages/master/install-mechanic.sh | sudo bash -s unstable
</code>
        </div>
      </div>

      <div class="row">
        <div class="col-lg-12">
          <h2>First steps</h2>
          <p>A migration can be written as a shell script. This is a simple example migration:</p>
          <code>#!/bin/bash -ex

echo "# Hooray, mechanic is running." > /tmp/hooray.log
exit 0
</code>

          <p>The next command places the migration script in the mechanic migrations folder and makes it executable.</p>
          <code><![CDATA[cat - >/var/lib/mechanic/migration.d/20161224_hooray.sh <<EOB
#!/bin/bash -ex

echo "# Hooray, mechanic is running." > /tmp/hooray.log
exit 0
EOB
chmod 755 /var/lib/mechanic/migration.d/20161224_hooray.sh
]]></code>

          <p>Run the Server Mechanic to apply migrations:</p>
          <code>
mechanic migrate
</code>

          <p>Query Server Mechanic if the migration has been applied:</p>
          <code>
mechanic list-migrations
</code>

          <p>Verify that the migration's effect is visible:</p>
          <code>
cat /tmp/hooray.log
# Hooray, mechanic is running.
</code>
        </div>
      </div>

      <div class="row">
        <div class="col-lg-12">
          <h1><a id="documentation"></a>Documentation</h1>
          <h2>CLI - Sub Commands and Options</h2>

          <table class="table table-striped table-bordered">
            <tr><td>Command</td><td>Option</td><td>Since</td><td>Example</td><td>Description</td></tr>
            <tr><td>(all)</td><td>-v</td><td>0.1</td><td></td><td>Be verbose, increase logging output.</td></tr>
            <tr><td>migrate</td><td></td><td>0.1</td><td>mechanic migrate</td><td>Apply pending migrations.</td></tr>
            <tr><td></td><td></td><td>0.1</td><td>mechanic -v migrate -- /entrypoint.sh param=value</td><td>Execute follow up command if all migrations have been successfully applied.</td></tr>
            <tr><td>list-migrations</td><td></td><td>0.1</td><td>mechanic list-migrations</td><td>List migrations with status as if recorded in internal database.</td></tr>
            <tr><td></td><td>--order-by=id|start_date</td><td>0.1</td><td>mechanic list-migrations --order-by=id</td><td>Specify order for migrations list.<br/> If unspecified, order is by start_date.</td></tr>
            <tr><td>help</td><td></td><td>0.1</td><td>mechanic help</td><td>Print sub commands and options.</td></tr>
            <tr><td>version</td><td></td><td>0.1</td><td>mechanic version</td><td>Print version information.</td></tr>
          </table>

          <h3>Environment Variables</h3>
          <table class="table table-striped table-bordered">
            <tr><td>Environment Variable</td><td>Since</td><td>Example</td><td>Description</td></tr>
            <tr><td>MECHANIC_ROOT_DIR</td><td>0.1</td><td>/home/developer/test-dir</td><td>Root directory for execution. This is mainly used for integration testing.</td></tr>
          </table> 
        </div>
      </div>

      <div class="row">
        <div class="col-lg-12">
          <h2>The Configuration - /etc/mechanic.conf</h2>
          <code>
# /etc/mechanic.conf
[main]
log_file=/mechanic.volume/log/mechanic.log
pre_migration_dirs=/var/lib/mechanic/pre-migration.d/
migration_dirs=/var/lib/mechanic/migration.d/
post_migration_dirs=/var/lib/mechanic/post-migration.d/
run_dir=/mechanic.volume/tmp/
state_dir=/mechanic.volume/state
          </code>

          <h3>Configuration Options</h3>
          <table class="table table-striped table-bordered">
            <tr><td>Option</td><td>Since</td><td>Default</td><td>Example</td><td>Description</td></tr>
            <tr><td>log_file</td><td>0.1</td><td>${MECHANIC_ROOT_DIR}/var/log/mechanic.log</td><td>/var/log/mechanic.log<br/>/dev/stderr</td><td>File mechanic writes log messages to.</td></tr>
            <tr><td>pre_migration_dirs</td><td>0.4</td><td>${MECHANIC_ROOT_DIR}/etc/mechanic/pre-migration.d/: \<br/>${MECHANIC_ROOT_DIR}/var/lib/mechanic/pre-migration.d</td><td></td><td>Colon seperated list of pathes mechanic collects pre migration scripts from.</td></tr>
            <tr><td>migration_dirs</td><td>0.1</td><td>${MECHANIC_ROOT_DIR}/etc/mechanic/migration.d/: \<br/>${MECHANIC_ROOT_DIR}/var/lib/mechanic/migration.d</td><td></td><td>Colon seperated list of pathes mechanic collects the migration scripts from.</td></tr>
            <tr><td>post_migration_dirs</td><td>0.4</td><td>${MECHANIC_ROOT_DIR}/etc/mechanic/post-migration.d/: \<br/>${MECHANIC_ROOT_DIR}/var/lib/mechanic/post-migration.d</td><td></td><td>Colon seperated list of pathes mechanic collects post migration scripts from.</td></tr>
            <tr><td>run_dir</td><td>0.4</td><td>${MECHANIC_ROOT_DIR}/var/lib/mechanic/tmp</td><td>/var/lib/mechanic/tmp<br/>/tmp</td><td>Location for migration execution directories.<br/>When a migration failed diagnostic data can be found here. (So /tmp is a moderate choice.)</td></tr>
            <tr><td>state_dir</td><td>0.1</td><td>${MECHANIC_ROOT_DIR}/var/lib/mechanic/state</td><td></td><td>Location where Server Mechanic stores the migration state. Currently the migration state is stored in a sqlite database named inventory.db below this directory.</td></tr>
          </table>

        </div>
      </div>

      <div class="row">
        <div class="col-lg-12">
          <h1>The Project</h1>
          <h2>Status</h2>
          <p>Server Mechanic is in an early stage ("unstable"). Use it carefully and expect things to break.</p>
          <p>We appreciate any feedback about the tool and your usage scenarios so we can learn and improve Server Mechanic.</p>
        </div>
      </div>

      <div class="row">
        <div class="col-lg-12">
          <h2><a id="license"></a>License</h2>
          <p>Copyright (c) 2016,2017 by the Server Mechanic Team.</p>

<p>Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at<br/>
<br/>
<a target="_blank" href="http://www.apache.org/licenses/LICENSE-2.0">http://www.apache.org/licenses/LICENSE-2.0</a><br/>
<br/>
Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</p>
        </div>
      </div>
      <div class="row">
        <div class="col-lg-12">
          <h2><a id="contributing"></a>Contributing</h2>
          <p>Server Mechanic is an open source project, and contributions are welcome! Feel free to raise an issue or submit a pull request on github.</p>
        </div>
      </div>

      <div class="row">
        <div class="col-lg-12">
          <h1>Learn more</h1>
          For more information visit <a target="_blank" href="https://github.com/server-mechanic/mechanic">Server Mechanic project at github</a>.
        </div>
      </div>


<!--
## Docker container
* Add installation of mechanic to your Dockerfile
```
RUN curl -s https://raw.githubusercontent.com/server-mechanic/packages/master/install-mechanic.sh | sudo bash -s unstable
```
* Supposedly you want mechanic state to survice container restarts, so add a volume:
```
VOLUME /mechanic.volume
```
* Adjust /etc/mechanic.conf so mechanic will put state into the volume:
```
# /etc/mechanic.conf
[main]
log_file=/mechanic.volume/log/mechanic.log
pre_migration_dirs=/var/lib/mechanic/pre-migration.d/
migration_dirs=/var/lib/mechanic/migration.d/
post_migration_dirs=/var/lib/mechanic/post-migration.d/
run_dir=/mechanic.volume/tmp/
state_dir=/mechanic.volume/state
```
* Place your migrations below /var/lib/mechanic/migration.d/. (Make sure they are executable and exit with 0 in case of success.)
* Extend your container entrypoint so, that mechanic migrations will be run on container startup. Mechanic will replace itself with the actual endpoint.
```
ENTRYPOINT ["/usr/sbin/mechanic", "migrate", "- -", "PUT", "ACTUAL", "ENTRYPOINT", "HERE" ]
```
* Don't forget to start your container with the external volume mounted. (-v /path/to/volume:/mechanic.volume).
-->
</div>
<!--
      <div class="row marketing">
        <div class="col-lg-6">
          <h4>Subheading</h4>
          <p>Donec id elit non mi porta gravida at eget metus. Maecenas faucibus mollis interdum.</p>

          <h4>Subheading</h4>
          <p>Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Cras mattis consectetur purus sit amet fermentum.</p>

          <h4>Subheading</h4>
          <p>Maecenas sed diam eget risus varius blandit sit amet non magna.</p>
        </div>

        <div class="col-lg-6">
          <h4>Subheading</h4>
          <p>Donec id elit non mi porta gravida at eget metus. Maecenas faucibus mollis interdum.</p>

          <h4>Subheading</h4>
          <p>Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Cras mattis consectetur purus sit amet fermentum.</p>

          <h4>Subheading</h4>
          <p>Maecenas sed diam eget risus varius blandit sit amet non magna.</p>
        </div>
      </div>
      <div class="row marketing">
        <div class="col-lg-6">
          <h4>Subheading</h4>
          <p>Donec id elit non mi porta gravida at eget metus. Maecenas faucibus mollis interdum.</p>

          <h4>Subheading</h4>
          <p>Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Cras mattis consectetur purus sit amet fermentum.</p>

          <h4>Subheading</h4>
          <p>Maecenas sed diam eget risus varius blandit sit amet non magna.</p>
        </div>

        <div class="col-lg-6">
          <h4>Subheading</h4>
          <p>Donec id elit non mi porta gravida at eget metus. Maecenas faucibus mollis interdum.</p>

          <h4>Subheading</h4>
          <p>Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Cras mattis consectetur purus sit amet fermentum.</p>

          <h4>Subheading</h4>
          <p>Maecenas sed diam eget risus varius blandit sit amet non magna.</p>
        </div>
      </div>
-->
</page>
